% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gkde_fun.R
\name{gkde}
\alias{gkde}
\title{Geographic Kernel Density Estimator using linear or Haversine distances}
\usage{
gkde(grid, points, parallel = TRUE, nclus = 4, dist.method = "Haversine")
}
\arguments{
\item{grid}{A raster object to match.}

\item{points}{A two column data frame in the form (lon,lat) or (x,y)}

\item{parallel}{TRUE or FALSE, should this code be executed in parallel.}

\item{nclus}{IF parallel==TRUE then how many cores in the cluster.}

\item{dist.method}{Which distance should we use? Haversine for lat/long projections, 
or Pythagorean for flat images and/or small areas.}
}
\description{
This function calculates a kernel density estimation for raster objects.
}
\examples{
require(raster)
grid = raster::raster(nrows=18, ncols=36, xmn=-180, xmx=180, ymn=-90, ymx=90, vals=NULL)
grid = raster::setValues(grid,values=(as.vector(seq(1:raster::ncell(grid)))))
points = cbind(seq(xmin(grid), xmax(grid), length.out=100), 
      seq(ymin(grid), ymax(grid), length.out=100))
plot(grid); points(points);
di = gkde(grid, points, parallel=TRUE, dist.method='Pythagorean');
plot(di)
}
